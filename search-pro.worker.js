const{entries:V}=Object,{fromEntries:et}=Object,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>{const n=Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},bt=et(V(JSON.parse("{\"/\":{\"documentCount\":71,\"nextId\":71,\"documentIds\":{\"0\":\"1\",\"1\":\"1@1\",\"2\":\"2\",\"3\":\"2#参考仓库地址\",\"4\":\"2#本站仓库地址\",\"5\":\"2#说明\",\"6\":\"2#鼠标点击特效\",\"7\":\"2#图标的使用\",\"8\":\"2#live2d的使用\",\"9\":\"2#搜索\",\"10\":\"2#音乐插件\",\"11\":\"2#感谢\",\"12\":\"3\",\"13\":\"3#个人留言\",\"14\":\"3#关于本站\",\"15\":\"3#关于建站\",\"16\":\"4\",\"17\":\"4@1\",\"18\":\"5\",\"19\":\"5#vscode-启动springboot项目\",\"20\":\"5#安装java插件\",\"21\":\"5#安装springboot插件\",\"22\":\"5#创建springboot项目\",\"23\":\"5#vscode-启动vue3项目\",\"24\":\"5#安装vue插件\",\"25\":\"5#创建vue3项目\",\"26\":\"5@0\",\"27\":\"6\",\"28\":\"6@1\",\"29\":\"7\",\"30\":\"7#小组作业的初衷\",\"31\":\"7#小组作业的弊端\",\"32\":\"7@0\",\"33\":\"8\",\"34\":\"8@1\",\"35\":\"9\",\"36\":\"9#pojo\",\"37\":\"9#vo\",\"38\":\"9#dto\",\"39\":\"9#po\",\"40\":\"9#pojo、vo、dto、po的区别\",\"41\":\"9#个人理解\",\"42\":\"9#参考资料\",\"43\":\"9@0\",\"44\":\"10\",\"45\":\"10#mapstruct是什么\",\"46\":\"10#maven引入\",\"47\":\"10#使用\",\"48\":\"10#总结\",\"49\":\"10@0\",\"50\":\"11\",\"51\":\"11#一对一查询\",\"52\":\"11#一对多查询\",\"53\":\"11#分类查询\",\"54\":\"11#总结\",\"55\":\"11@0\",\"56\":\"12\",\"57\":\"12#前言\",\"58\":\"12#样例\",\"59\":\"12#注意事项\",\"60\":\"12#总结\",\"61\":\"12@0\",\"62\":\"13\",\"63\":\"13#继承关系的存储\",\"64\":\"13#聚合关系的存储\",\"65\":\"13@0\",\"66\":\"14\",\"67\":\"14@1\",\"68\":\"15\",\"69\":\"15@0\",\"70\":\"16\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,2],\"1\":[null,null,1],\"2\":[1],\"3\":[1,6],\"4\":[1,5],\"5\":[1],\"6\":[1,13],\"7\":[1,9],\"8\":[1,6],\"9\":[1,11],\"10\":[1,4],\"11\":[1,4],\"12\":[1],\"13\":[1,17],\"14\":[1,18],\"15\":[1,2],\"16\":[1,3],\"17\":[null,null,1],\"18\":[1],\"19\":[2,4],\"20\":[1,3],\"21\":[1,3],\"22\":[1,45],\"23\":[2,3],\"24\":[1,4],\"25\":[1,22],\"26\":[null,null,1],\"27\":[1,2],\"28\":[null,null,1],\"29\":[3],\"30\":[1,8],\"31\":[1,10],\"32\":[null,null,2],\"33\":[1,3],\"34\":[null,null,1],\"35\":[1,2],\"36\":[1,21],\"37\":[1,12],\"38\":[1,15],\"39\":[1,10],\"40\":[4,25],\"41\":[1,14],\"42\":[1,8],\"43\":[null,null,1],\"44\":[2,4],\"45\":[1,46],\"46\":[1,17],\"47\":[1,105],\"48\":[1,4],\"49\":[null,null,2],\"50\":[1],\"51\":[1,59],\"52\":[1,52],\"53\":[1,101],\"54\":[1,4],\"55\":[null,null,3],\"56\":[1],\"57\":[1,6],\"58\":[1,30],\"59\":[1,7],\"60\":[1,4],\"61\":[null,null,2],\"62\":[1],\"63\":[1,30],\"64\":[1,16],\"65\":[null,null,2],\"66\":[1,3],\"67\":[null,null,1],\"68\":[1],\"69\":[null,null,1],\"70\":[1,3]},\"averageFieldLength\":[1.1333987912311154,14.35329893650879,0.7421923904239285],\"storedFields\":{\"0\":{\"h\":\"关于\",\"t\":[\"相关信息\",\"关于我和关于本站\"]},\"1\":{\"c\":[\"目录\"]},\"2\":{\"h\":\"关于本站搭建\"},\"3\":{\"h\":\"参考仓库地址\",\"t\":[\"首先给出我参考的项目地址 github。 本站几乎全部参考这个项目（没办法太菜了bushi），感谢作者开源。\"]},\"4\":{\"h\":\"本站仓库地址\",\"t\":[\"然后给出本站的仓库地址 github。建议直接参照上面那个，我这个只是拙劣的模仿。\"]},\"5\":{\"h\":\"说明\"},\"6\":{\"h\":\"鼠标点击特效\",\"t\":[\"这个实现在 public/js/mouseEffect.js 文件中，使用jQuery实现。网上特别多，我就不赘述了。\",\"注意\",\"这个jQuery加载比较慢，如果鼠标点击没有特效，可以刷新一下。\"]},\"7\":{\"h\":\"图标的使用\",\"t\":[\"本站采用FontAwesome图标，图标使用方法请参考FontAwesome官网。 如果你是大牛，你可以直接在iconFont建立自己的图标，按照vuepress-theme-hope官网介绍，还是不建议直接使用iconFont。\"]},\"8\":{\"h\":\"live2D的使用\",\"t\":[\"本站使用的是Live2D插件，具体可以参照官网，我这里就不赘述了。另外附上资源网模型资源 (这个官网里面也有给出)。\"]},\"9\":{\"h\":\"搜索\",\"t\":[\"本站使用vuepress-plugin-search-pro插件，具体使用方法请参照官网。\",\"注意\",\"本站搜索功能可能存在一些问题，如果搜索不到，或者搜索框无法关闭 请尝试刷新页面。\"]},\"10\":{\"h\":\"音乐插件\",\"t\":[\"由于没有服务器，所以我把音乐存在本地。有服务器的可以参照原作者的写法。\"]},\"11\":{\"h\":\"感谢\",\"t\":[\"感谢作者 mo7cc开源，感谢开源社区。\"]},\"12\":{\"h\":\"关于我\"},\"13\":{\"h\":\"个人留言\",\"t\":[\"你好，我叫Carmen。欢迎访问我的个人网站。如你所见，我是一个正在努力前行的小牛马。我的目标是成为一名全栈工程师。什么？你问我为什么要走全栈？？因为全栈才符合牛马的气质啊！😎。\",\"注意\",\"开个玩笑，全栈十分辛苦，不建议入坑。我只是比较笨，所以只能走全栈。\"]},\"14\":{\"h\":\"关于本站\",\"t\":[\"可能看到我的网站的人觉得我是个衰鬼，因为我的网站取名还是太抽象了。但我想说，人生无常，大肠包小肠。未经他人苦，莫劝他人善。也许，我的网站就是我的“大肠”，而我的“小肠”就是我的生活。😎\",\"注意\",\"好吧。人还是要积极乐观的不是吗？\"]},\"15\":{\"h\":\"关于建站\",\"t\":[\"具体请参阅关于本站。\"]},\"16\":{\"h\":\"技术\",\"t\":[\"相关信息\",\"记录一些与编程相关的技巧与心得。\"]},\"17\":{\"c\":[\"目录\"]},\"18\":{\"h\":\"vscode一条龙服务\"},\"19\":{\"h\":\"vscode 启动SpringBoot项目\",\"t\":[\"默认已经安装了JDK，数据库，Maven\",\"没装的可以上网搜教程\"]},\"20\":{\"h\":\"安装Java插件\",\"t\":[\"vscode 插件搜索Java即可。\",\"Java插件\"]},\"21\":{\"h\":\"安装SpringBoot插件\",\"t\":[\"vscode 插件搜索Spring即可。\",\"Spring插件\"]},\"22\":{\"h\":\"创建SpringBoot项目\",\"t\":[\"按住 ctrl + shift + p，输入Java: Create Java Project\",\"Java: Create Java Project\",\"选择Spring Boot\",\"选择Spring Boot\",\"选择Maven\",\"选择Maven\",\"选择SpringBoot版本\",\"选择SpringBoot版本\",\"选择Java为开发语言\",\"选择Java为开发语言\",\"输入域名\",\"设置域名\",\"输入项目名称\",\"设置项目名称\",\"选择Jar为打包方式\",\"选择Jar为打包方式\",\"选择Java版本（根据你的情况选择）\",\"设置Java版本\",\"选择依赖（根据你的情况选择）\",\" 在application.properties中设置数据库连接信息\",\"没有配置数据库启动不了\",\"spring.application.name=demo spring.datasource.url=jdbc:mysql://localhost:3306/testdb1 spring.datasource.username=root spring.datasource.password=123456 spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver\",\"点击run启动项目\",\"启动项目\"]},\"23\":{\"h\":\"vscode 启动Vue3项目\",\"t\":[\"默认已经安装了Node.js\",\"没装的可以上网搜教程\"]},\"24\":{\"h\":\"安装Vue插件\",\"t\":[\"vscode 插件搜索Vue即可。\",\"alt text\"]},\"25\":{\"h\":\"创建Vue3项目\",\"t\":[\"按住ctrl + j打开命令行窗口 输入\",\"npm create vue@latest\",\"设置项目（这里是演示所以全选否）\",\"设置Vue项目\",\"输入以下命令\",\"cd xxx(你的目录) npm install npm run dev\",\"打开浏览器访问http://localhost:5173/\",\"成功启动Vue项目\"]},\"26\":{\"c\":[\"vscode\"]},\"27\":{\"h\":\"杂谈\",\"t\":[\"相关信息\",\"一些碎碎念\"]},\"28\":{\"c\":[\"目录\"]},\"29\":{\"h\":\"论小组作业为什么是“神”\"},\"30\":{\"h\":\"小组作业的初衷\",\"t\":[\"小组作业的初衷是为了让同学们在完成课程任务的同时，也能通过合作和交流来提高自己的技能和知识。通过小组作业，同学们可以互相学习、互相帮助，共同完成一个项目或任务，从而提高自己的团队协作能力和解决问题的能力。\"]},\"31\":{\"h\":\"小组作业的弊端\",\"t\":[\"都是摸鱼大神，怎么玩？？？ 😎。 ctm，别问，问就是摸鱼。 9个人，只有一个人在写，怎么玩？？\",\"所以说我就是牛马本马。😎。\"]},\"32\":{\"c\":[\"小组作业\",\"摸鱼\"]},\"33\":{\"h\":\"后端\",\"t\":[\"相关信息\",\"后端相关的。\"]},\"34\":{\"c\":[\"目录\"]},\"35\":{\"h\":\"Java的多个o\",\"t\":[\"以下介绍常见的几个o。\"]},\"36\":{\"h\":\"pojo\",\"t\":[\"pojo是Plain Old Java Object的缩写，它是一个简单的Java对象，没有继承任何类，没有实现任何接口，没有使用任何注解，没有包含任何业务逻辑，没有包含任何数据库操作，没有包含任何网络通信，没有包含任何第三方库的依赖。\",\"其实大概意思就是只有data、constructor、getter、setter、toString、equals、hashCode这些方法，没有其他的方法。\"]},\"37\":{\"h\":\"vo\",\"t\":[\"vo是View Object的缩写，它是一个视图对象，用于表示一个视图层的数据。vo通常用于表示一个视图层的数据，例如一个网页的表单数据，或者一个网页的显示数据。vo通常用于作为视图层的参数和返回值。\",\"可以理解为Controller层返回的Resp对象，包含前端想要的数据，过滤掉前端不需要的数据。\"]},\"38\":{\"h\":\"dto\",\"t\":[\"dto是Data Transfer Object的缩写，它是一个数据传输对象，用于在不同的层之间传递数据。dto通常用于表示一个业务实体，或者用于表示一个数据库表中的一条记录。dto通常用于作为数据传输对象（DTO），或者用于作为业务逻辑层的参数和返回值。\",\"理解为dto为各层传输的对象（前端传后端的数据和后端传前端的数据，所以按照现在前后分离的思想来看，vo也可以认为是一种dto）。\"]},\"39\":{\"h\":\"po\",\"t\":[\"po是Persistent Object的缩写，它是一个持久化对象，用于表示一个数据库表中的一条记录。po通常用于表示一个数据库表中的一条记录。po通常用于作为数据传输对象（DTO），或者用于作为业务逻辑层的参数和返回值。\",\"理解为po中的字段和数据库中的字段一一对应。\"]},\"40\":{\"h\":\"pojo、vo、dto、po的区别\",\"t\":[\"pojo、vo、dto、po都是Java中常用的对象类型，它们之间的区别如下：\",\"pojo：Plain Old Java Object，普通Java对象 只有数据，和getter和setter。\",\"vo：View Object 显示层对象 专门为前端服务的对象，包含前端想要的数据，过滤掉前端不需要的数据。\",\"dto：Data Transfer Object，数据传输对象，用于在不同的层之间传递数据。\",\"po：Persistent Object，持久化对象，其中每个字段都和数据库中的属性一一对应\"]},\"41\":{\"h\":\"个人理解\",\"t\":[\"这么多个o（还有些没列出来），其实都是根据业务场景来划分的，没有固定的规则，所以大家可以根据自己的业务场景来划分。 个人写只用到vo(Resp), dto(Req), po(entity)。 应当注意的是这些o之间并不是固定的，他们之间可以相互转换。\"]},\"42\":{\"h\":\"参考资料\",\"t\":[\"概念POJO、DTO、DAO、PO、BO、VO、QO、ENTITY详解\"]},\"43\":{\"c\":[\"java\"]},\"44\":{\"h\":\"java类之间的转换-mapStruct的使用\",\"t\":[\"前面说到，在开发中我们会用到很多类。那么这些类之间应该如何做转换？\",\"下面介绍mapStruct\"]},\"45\":{\"h\":\"mapStruct是什么\",\"t\":[\"首先引用官网的原话:\",\"MapStruct is a code generator that greatly simplifies the implementation of mappings between Java bean types based on a convention over configuration approach. The generated mapping code uses plain method invocations and thus is fast, type-safe and easy to understand.\",\"大概意思是，mapStruct是一个代码生成器，它大大简化了基于约定优于配置的方法在Java bean类型之间进行映射的实现。生成的映射代码使用普通的方法调用，因此速度快、类型安全且易于理解。\"]},\"46\":{\"h\":\"maven引入\",\"t\":[\"maven坐标如下：\",\"<dependency> <groupId>org.mapstruct</groupId> <artifactId>mapstruct</artifactId> <version>1.5.5.Final</version> </dependency> <dependency> <groupId>org.mapstruct</groupId> <artifactId>mapstruct-processor</artifactId> <version>1.5.5.Final</version> <scope>provided</scope> </dependency>\"]},\"47\":{\"h\":\"使用\",\"t\":[\"假设有一个Blog的po\",\"定义如下\",\"@Schema(description = \\\"博客实体类\\\") @Data @AllArgsConstructor @NoArgsConstructor @Builder public class Blog { @Schema(description = \\\"主键id\\\") @JsonFormat(shape = JsonFormat.Shape.STRING) private Long id; @Schema(description = \\\"博客作者id\\\") @JsonFormat(shape = JsonFormat.Shape.STRING) private Long userId; @Schema(description = \\\"博客标题\\\") private String title; @Schema(description = \\\"博客描述\\\") private String description; @Schema(description = \\\"博客内容\\\") private String content; @Schema(description = \\\"博客创建时间戳\\\", defaultValue = \\\"创建博客时的时间戳\\\") @JsonFormat(timezone=\\\"GMT+8\\\") private Timestamp createAt; }\",\"还有一个BlogResp的vo\",\"定义如下\",\"@Schema(description = \\\"博客响应\\\") @Data @AllArgsConstructor @NoArgsConstructor @Builder public class BlogResp { @Schema(description = \\\"主键id\\\") @JsonFormat(shape = JsonFormat.Shape.STRING) private Long id; @Schema(description = \\\"发布博客的用户id\\\") @JsonFormat(shape = JsonFormat.Shape.STRING) private Long userId; @Schema(description = \\\"发布博客的用户昵称\\\") private String userName; @Schema(description = \\\"发布博客的用户头像\\\") private String userAvatar; @Schema(description = \\\"博客标题\\\") private String title; @Schema(description = \\\"博客描述\\\") private String description; @Schema(description = \\\"博客内容\\\") private String content; @Schema(description = \\\"博客创建时间戳\\\", defaultValue = \\\"创建博客时的时间戳\\\") @JsonFormat(timezone=\\\"GMT+8\\\") private Timestamp createAt; }\",\"可以看出多了两个属性，分别是userName和userAvatar，这两个属性需要从User表中获取。\",\"那么如何将Blog转换为BlogResp呢？\",\"我们只需要定义一个接口，用于定义转换规则。\",\"@Mapper(componentModel = \\\"spring\\\") public interface BlogConvertMapper { BlogConvertMapper INSTANCE = Mappers.getMapper(BlogConvertMapper.class); /** * 将博客实体类转换为博客响应类 * * @param blog 博客实体类 * @param userAvatar 用户头像 * @param userNickName 用户昵称 * @return 博客响应类 */ @Mappings({ @Mapping(target = \\\"userAvatar\\\", source = \\\"userAvatar\\\"), @Mapping(target = \\\"userName\\\", source = \\\"userNickName\\\") }) BlogResp toBlogResp(Blog blog, String userAvatar, String userNickName); }\",\"其中@Mapper注解用于标识这是一个mapStruct的映射接口，componentModel = \\\"spring\\\"表示这个接口是一个spring的bean。\",\"@Mappings注解用于定义映射规则，@Mapping注解用于定义具体的映射规则。\",\"然后我们就可以在代码中使用这个接口了。\",\"@Autowired private BlogConvertMapper blogConvertMapper; public BlogResp convertBlogToResp(Blog blog, String userAvatar, String userNickName) { return blogConvertMapper.toBlogResp(blog, userAvatar, userNickName); }\",\"如果没有componentModel = \\\"spring\\\"\",\"那么接口使用方式如下\",\"public BlogResp convertBlogToResp(Blog blog, String userAvatar, String userNickName) { return BlogConvertMapper.INSTANCE.toBlogResp(blog, userAvatar, userNickName); }\",\"其实加了componentModel = \\\"spring\\\"之后，在字节码里面会加上@Component，方便我们使用@Autowired\",\"以下为字节码\",\"@Component public class BlogConvertMapperImpl implements BlogConvertMapper { public BlogConvertMapperImpl() { } public BlogResp toBlogResp(Blog blog, String userAvatar, String userNickName) { if (blog == null && userAvatar == null && userNickName == null) { return null; } else { BlogResp.BlogRespBuilder blogResp = BlogResp.builder(); if (blog != null) { blogResp.content(blog.getContent()); blogResp.createAt(blog.getCreateAt()); blogResp.description(blog.getDescription()); blogResp.id(blog.getId()); blogResp.title(blog.getTitle()); blogResp.userId(blog.getUserId()); } blogResp.userAvatar(userAvatar); blogResp.userName(userNickName); return blogResp.build(); } } }\"]},\"48\":{\"h\":\"总结\",\"t\":[\"mapStruct是一个用于Java类之间的转换的工具，它可以自动生成转换代码，使得转换过程更加简单和高效。\"]},\"49\":{\"c\":[\"java\",\"mapStruct\"]},\"50\":{\"h\":\"MyBatis复杂SQL查询\"},\"51\":{\"h\":\"一对一查询\",\"t\":[\"这里指的是一个对象中包含一个对象。\",\"这时候我们可以通过<association>标签来实现。\",\"举个例子\",\"一个路线项目包含一个地点，地点包含经纬度，地址等信息。\",\"ResultMap写法如下\",\"<!-- RouteItemMapper.xml --> <resultMap id=\\\"routeItemResultMap\\\" type=\\\"RouteItem\\\"> <id property=\\\"id\\\" column=\\\"id\\\" /> <result property=\\\"order\\\" column=\\\"order\\\" /> <association property=\\\"location\\\" column=\\\"loc_id\\\" select=\\\"com.stu.mapper.LocationMapper.findLocationById\\\" /> </resultMap> <!-- LocationMapper.xml --> <resultMap id=\\\"locationResultMap\\\" type=\\\"Location\\\"> <id property=\\\"id\\\" column=\\\"id\\\" /> <result property=\\\"longitude\\\" column=\\\"longitude\\\" /> <result property=\\\"latitude\\\" column=\\\"latitude\\\" /> <result property=\\\"address\\\" column=\\\"address\\\" /> </resultMap>\",\"查询的时候直接如下面写即可\",\"<select id=\\\"findRouteItemsByRouteId\\\" resultMap=\\\"routeItemResultMap\\\"> SELECT `id`, `loc_id`, `order` FROM `route_item` WHERE `route_id` = #{routeId} ORDER BY `order` </select>\",\"这时候会根据loc_id来查询Location对象，并且赋值给RouteItem对象的location属性。\"]},\"52\":{\"h\":\"一对多查询\",\"t\":[\"这里指的是一个对象中包含多个对象。\",\"这时候我们可以通过<collection>标签来实现。\",\"举个例子\",\"一个路线列表包含多个路线项目\",\"ResultMap写法如下\",\"<!-- RouteListMapper.xml --> <resultMap id=\\\"routeResultMap\\\" type=\\\"Route\\\"> <id property=\\\"id\\\" column=\\\"id\\\" /> <result property=\\\"name\\\" column=\\\"name\\\" /> <collection property=\\\"routeItems\\\" column=\\\"id\\\" select=\\\"com.stu.mapper.RouteItemMapper.findRouteItemsByRouteId\\\" /> </resultMap> <!-- RouteItemMapper.xml --> <resultMap id=\\\"routeItemResultMap\\\" type=\\\"RouteItem\\\"> <id property=\\\"id\\\" column=\\\"id\\\" /> <result property=\\\"order\\\" column=\\\"order\\\" /> <association property=\\\"location\\\" column=\\\"loc_id\\\" select=\\\"com.stu.mapper.LocationMapper.findLocationById\\\" /> </resultMap>\",\"查询的时候直接如下面写即可\",\"<select id=\\\"findRouteListById\\\" resultMap=\\\"routeResultMap\\\"> SELECT `id`, `name` FROM `route` WHERE `id` = #{id} </select>\",\"这时候会根据id来查询RouteItem对象，并且赋值给Route对象的routeItems属性。\"]},\"53\":{\"h\":\"分类查询\",\"t\":[\"假设我们有一个父类，几个子类，现在我们要查询父类，并且查询出其子类。\",\"（我这里父类和子类的表是分开的 参见从面向对象到数据库存储）\",\"这时候我们可以通过<discriminator>标签来实现。\",\"假设一个Item类派生出Spot, Hotel, Restaurant\",\"Item表中存储了一个type字段，用来区分是哪个子类。\",\"ResultMap写法如下\",\"<!-- ItemMapper.xml --> <resultMap id=\\\"itemResultMap\\\" type=\\\"Item\\\"> <id property=\\\"id\\\" column=\\\"id\\\" /> <result property=\\\"name\\\" column=\\\"name\\\" /> <result property=\\\"description\\\" column=\\\"desc\\\" /> <result property=\\\"itemType\\\" column=\\\"type\\\" /> <discriminator javaType=\\\"String\\\" column=\\\"type\\\"> <case value=\\\"SPOT\\\" resultMap=\\\"com.stu.mapper.SpotMapper.spotResultMap\\\" /> <case value=\\\"HOTEL\\\" resultMap=\\\"com.stu.mapper.HotelMapper.hotelResultMap\\\" /> <case value=\\\"RESTAURANT\\\" resultMap=\\\"com.stu.mapper.RestaurantMapper.restaurantResultMap\\\" /> </discriminator> </resultMap> <!-- SpotMapper.xml --> <!-- 这里的spotResultMap继承了itemResultMap --> <resultMap id=\\\"spotResultMap\\\" type=\\\"Spot\\\" extends=\\\"com.stu.mapper.ItemMapper.itemResultMap\\\"> <result property=\\\"avgLevel\\\" column=\\\"avg_level\\\" /> <result property=\\\"starNumber\\\" column=\\\"star_number\\\" /> </resultMap>\",\"查询写法如下\",\"<select id=\\\"findItemById\\\" resultMap=\\\"itemResultMap\\\"> SELECT `filtered_item`.`id`, `filtered_item`.`name`, `filtered_item`.`desc`, `filtered_item`.`type`, `filtered_item`.`loc_id`, CASE WHEN `filtered_item`.`type` = 'SPOT' THEN `spot`.`avg_level` WHEN `filtered_item`.`type` = 'HOTEL' THEN `hotel`.`avg_level` WHEN `filtered_item`.`type` = 'RESTAURANT' THEN `restaurant`.`avg_level` ELSE NULL END AS `avg_level`, CASE WHEN `filtered_item`.`type` = 'SPOT' THEN `spot`.`star_number` WHEN `filtered_item`.`type` = 'HOTEL' THEN `hotel`.`star_number` WHEN `filtered_item`.`type` = 'RESTAURANT' THEN `restaurant`.`star_number` ELSE NULL END AS `star_number`, `hotel`.`avg_price` AS `hotel_avg_price`, `restaurant`.`avg_price` AS `restaurant_avg_price`, `restaurant`.`type` AS `restaurant_type`, `restaurant`.`recommend` AS `restaurant_recommend` FROM ( SELECT `item`.`id`, `item`.`name`, `item`.`desc`, `item`.`type`, `item`.`loc_id` FROM `item` WHERE `item`.`id` = #{id} ) AS `filtered_item` LEFT JOIN `spot` ON `filtered_item`.`id` = `spot`.`id` LEFT JOIN `hotel` ON `filtered_item`.`id` = `hotel`.`id` LEFT JOIN `restaurant` ON `filtered_item`.`id` = `restaurant`.`id`; </select>\"]},\"54\":{\"h\":\"总结\",\"t\":[\"MyBatis的复杂查询主要通过<resultMap>标签来实现，通过<association>和<collection>标签来关联对象，通过<discriminator>标签来实现分类查询。\"]},\"55\":{\"c\":[\"数据库\",\"mybatis\",\"复杂SQL\"]},\"56\":{\"h\":\"Mybatis字段类型不匹配解决\"},\"57\":{\"h\":\"前言\",\"t\":[\"在开发过程中，我们经常会遇到数据库字段类型与Java实体类属性类型不匹配的问题。\",\"这时，我们需要在MyBatis的xml文件设置resultMap，将数据库字段类型与Java实体类属性类型进行映射。\"]},\"58\":{\"h\":\"样例\",\"t\":[\"<resultMap id=\\\"userResultMap\\\" type=\\\"User\\\"> <id property=\\\"id\\\" column=\\\"id\\\" /> <result property=\\\"phone\\\" column=\\\"phone\\\" /> <result property=\\\"password\\\" column=\\\"pwd\\\" /> <result property=\\\"gender\\\" column=\\\"gender\\\" /> <result property=\\\"nickName\\\" column=\\\"nickName\\\" /> <result property=\\\"birthday\\\" column=\\\"birthday\\\" /> <result property=\\\"avatar\\\" column=\\\"avatar\\\" /> </resultMap>\",\"然后就可以在select语句中使用resultMap属性了。\",\"<select id=\\\"getUserById\\\" resultMap=\\\"userResultMap\\\"> SELECT * FROM user WHERE id = #{id} </select>\"]},\"59\":{\"h\":\"注意事项\",\"t\":[\"resultMap的id属性必须与select语句的resultMap一致。\",\"type属性必须与Java实体类的全限定名一致。（建议加上包名）\",\"id标签的property属性必须与Java实体类的属性名一致，column属性必须与数据库字段名一致。\",\"result标签的property属性必须与Java实体类的属性名一致，column属性必须与数据库字段名一致。\"]},\"60\":{\"h\":\"总结\",\"t\":[\"通过设置resultMap，我们可以将数据库字段类型与Java实体类属性类型进行映射，解决字段类型不匹配的问题。\"]},\"61\":{\"c\":[\"数据库\",\"mybatis\"]},\"62\":{\"h\":\"从面向对象到数据库存储\"},\"63\":{\"h\":\"继承关系的存储\",\"t\":[\"对于继承关系，我们一般有两种存储方式：\",\"合并存储：将所有子类和父类的字段都存储在一张表中，不同子类建立不同表。\",\"比如，B、C继承A。那么 B建立一张表，C建立一张表。B表和C表都存储A表的数据。 然后B表存储自己独特的字段，C表存储自己独特的字段。\",\"这样做的好处是，查询方便，不用做表关联，插入删除也方便。\",\"分开存储：将父类和子类分别存储在不同的表中，子表通过外键关联父表。\",\"比如，B、C继承A。那么三个类分成三个表，每张表存储自己独特的字段。然后B表和C表通过外键关联A表。 这样做查询时需要建立表的链接，比较费时，而且插入删除时需要多表操作比较麻烦。 但是假如一般类也可以生成对象，那么这种方法比较合适。\"]},\"64\":{\"h\":\"聚合关系的存储\",\"t\":[\"对于聚合关系，我们有以下集中存储方式：\",\"一对一关系：可以存成两张表，通过外键关联。但更多的是存成一张表，这样减少开销\",\"一对多关系：一般存成两张表，通过外键关联。当然也可以化简成一张表（往多端靠拢）。\",\"多对多关系：一般存成三张表，通过外键关联。或者耍流氓存向量或者json，但是这样就违背了关系型数据库的设计理念。\"]},\"65\":{\"c\":[\"数据库\",\"面向对象\"]},\"66\":{\"h\":\"前端\",\"t\":[\"相关信息\",\"前端相关的。\"]},\"67\":{\"c\":[\"目录\"]},\"68\":{\"h\":\"初识Vue\"},\"69\":{\"c\":[\"Vue\"]},\"70\":{\"h\":\"\",\"t\":[\"404 Not Found\"]}},\"dirtCount\":0,\"index\":[[\"404\",{\"1\":{\"70\":1}}],[\"初识vue\",{\"0\":{\"68\":1}}],[\"面向对象\",{\"2\":{\"65\":1}}],[\"多对多关系\",{\"1\":{\"64\":1}}],[\"往多端靠拢\",{\"1\":{\"64\":1}}],[\"当然也可以化简成一张表\",{\"1\":{\"64\":1}}],[\"对于聚合关系\",{\"1\":{\"64\":1}}],[\"对于继承关系\",{\"1\":{\"63\":1}}],[\"聚合关系的存储\",{\"0\":{\"64\":1}}],[\"但是这样就违背了关系型数据库的设计理念\",{\"1\":{\"64\":1}}],[\"但是假如一般类也可以生成对象\",{\"1\":{\"63\":1}}],[\"但更多的是存成一张表\",{\"1\":{\"64\":1}}],[\"但我想说\",{\"1\":{\"14\":1}}],[\"而且插入删除时需要多表操作比较麻烦\",{\"1\":{\"63\":1}}],[\"而我的\",{\"1\":{\"14\":1}}],[\"比较费时\",{\"1\":{\"63\":1}}],[\"比如\",{\"1\":{\"63\":2}}],[\"每张表存储自己独特的字段\",{\"1\":{\"63\":1}}],[\"子表通过外键关联父表\",{\"1\":{\"63\":1}}],[\"插入删除也方便\",{\"1\":{\"63\":1}}],[\"插件搜索vue即可\",{\"1\":{\"24\":1}}],[\"插件搜索spring即可\",{\"1\":{\"21\":1}}],[\"插件搜索java即可\",{\"1\":{\"20\":1}}],[\"不用做表关联\",{\"1\":{\"63\":1}}],[\"不同子类建立不同表\",{\"1\":{\"63\":1}}],[\"不建议入坑\",{\"1\":{\"13\":1}}],[\"合并存储\",{\"1\":{\"63\":1}}],[\"继承关系的存储\",{\"0\":{\"63\":1}}],[\"从面向对象到数据库存储\",{\"0\":{\"62\":1}}],[\"从而提高自己的团队协作能力和解决问题的能力\",{\"1\":{\"30\":1}}],[\"解决字段类型不匹配的问题\",{\"1\":{\"60\":1}}],[\"建议加上包名\",{\"1\":{\"59\":1}}],[\"建议直接参照上面那个\",{\"1\":{\"4\":1}}],[\"样例\",{\"0\":{\"58\":1}}],[\"将父类和子类分别存储在不同的表中\",{\"1\":{\"63\":1}}],[\"将所有子类和父类的字段都存储在一张表中\",{\"1\":{\"63\":1}}],[\"将数据库字段类型与java实体类属性类型进行映射\",{\"1\":{\"57\":1}}],[\"将博客实体类转换为博客响应类\",{\"1\":{\"47\":1}}],[\"复杂sql\",{\"2\":{\"55\":1}}],[\"通过外键关联\",{\"1\":{\"64\":3}}],[\"通过设置resultmap\",{\"1\":{\"60\":1}}],[\"通过<discriminator>标签来实现分类查询\",{\"1\":{\"54\":1}}],[\"通过<association>和<collection>标签来关联对象\",{\"1\":{\"54\":1}}],[\"通过小组作业\",{\"1\":{\"30\":1}}],[\"when\",{\"1\":{\"53\":6}}],[\"where\",{\"1\":{\"51\":1,\"52\":1,\"53\":1,\"58\":1}}],[\"查询方便\",{\"1\":{\"63\":1}}],[\"查询写法如下\",{\"1\":{\"53\":1}}],[\"查询的时候直接如下面写即可\",{\"1\":{\"51\":1,\"52\":1}}],[\"参见从面向对象到数据库存储\",{\"1\":{\"53\":1}}],[\"参考资料\",{\"0\":{\"42\":1}}],[\"参考仓库地址\",{\"0\":{\"3\":1}}],[\"并且查询出其子类\",{\"1\":{\"53\":1}}],[\"并且赋值给route对象的routeitems属性\",{\"1\":{\"52\":1}}],[\"并且赋值给routeitem对象的location属性\",{\"1\":{\"51\":1}}],[\"现在我们要查询父类\",{\"1\":{\"53\":1}}],[\"几个子类\",{\"1\":{\"53\":1}}],[\"假设一个item类派生出spot\",{\"1\":{\"53\":1}}],[\"假设我们有一个父类\",{\"1\":{\"53\":1}}],[\"假设有一个blog的po\",{\"1\":{\"47\":1}}],[\"分开存储\",{\"1\":{\"63\":1}}],[\"分类查询\",{\"0\":{\"53\":1}}],[\"分别是username和useravatar\",{\"1\":{\"47\":1}}],[\"`item`\",{\"1\":{\"53\":7}}],[\"`id`\",{\"1\":{\"51\":1,\"52\":2,\"53\":9}}],[\"`hotel\",{\"1\":{\"53\":1}}],[\"`hotel`\",{\"1\":{\"53\":5}}],[\"`star\",{\"1\":{\"53\":4}}],[\"`spot`\",{\"1\":{\"53\":4}}],[\"`recommend`\",{\"1\":{\"53\":1}}],[\"`restaurant\",{\"1\":{\"53\":3}}],[\"`restaurant`\",{\"1\":{\"53\":7}}],[\"`route`\",{\"1\":{\"52\":1}}],[\"`route\",{\"1\":{\"51\":2}}],[\"`avg\",{\"1\":{\"53\":6}}],[\"`type`\",{\"1\":{\"53\":9}}],[\"`desc`\",{\"1\":{\"53\":2}}],[\"`filtered\",{\"1\":{\"53\":15}}],[\"`name`\",{\"1\":{\"52\":1,\"53\":2}}],[\"`order`\",{\"1\":{\"51\":2}}],[\"`loc\",{\"1\":{\"51\":1,\"53\":2}}],[\">\",{\"1\":{\"51\":12,\"52\":11,\"53\":16,\"58\":9}}],[\"xml\",{\"1\":{\"51\":2,\"52\":2,\"53\":2}}],[\"xxx\",{\"1\":{\"25\":1}}],[\"地址等信息\",{\"1\":{\"51\":1}}],[\"地点包含经纬度\",{\"1\":{\"51\":1}}],[\"举个例子\",{\"1\":{\"51\":1,\"52\":1}}],[\"一般存成三张表\",{\"1\":{\"64\":1}}],[\"一般存成两张表\",{\"1\":{\"64\":1}}],[\"一个路线列表包含多个路线项目\",{\"1\":{\"52\":1}}],[\"一个路线项目包含一个地点\",{\"1\":{\"51\":1}}],[\"一对多关系\",{\"1\":{\"64\":1}}],[\"一对多查询\",{\"0\":{\"52\":1}}],[\"一对一关系\",{\"1\":{\"64\":1}}],[\"一对一查询\",{\"0\":{\"51\":1}}],[\"一些碎碎念\",{\"1\":{\"27\":1}}],[\"使得转换过程更加简单和高效\",{\"1\":{\"48\":1}}],[\"使用\",{\"0\":{\"47\":1}}],[\"使用jquery实现\",{\"1\":{\"6\":1}}],[\"总结\",{\"0\":{\"48\":1,\"54\":1,\"60\":1}}],[\"以下为字节码\",{\"1\":{\"47\":1}}],[\"以下介绍常见的几个o\",{\"1\":{\"35\":1}}],[\"方便我们使用\",{\"1\":{\"47\":1}}],[\"之后\",{\"1\":{\"47\":1}}],[\"然后b表和c表通过外键关联a表\",{\"1\":{\"63\":1}}],[\"然后b表存储自己独特的字段\",{\"1\":{\"63\":1}}],[\"然后就可以在select语句中使用resultmap属性了\",{\"1\":{\"58\":1}}],[\"然后我们就可以在代码中使用这个接口了\",{\"1\":{\"47\":1}}],[\"然后给出本站的仓库地址\",{\"1\":{\"4\":1}}],[\"表示这个接口是一个spring的bean\",{\"1\":{\"47\":1}}],[\"用来区分是哪个子类\",{\"1\":{\"53\":1}}],[\"用户昵称\",{\"1\":{\"47\":1}}],[\"用户头像\",{\"1\":{\"47\":1}}],[\"用于定义转换规则\",{\"1\":{\"47\":1}}],[\"用于表示一个数据库表中的一条记录\",{\"1\":{\"39\":1}}],[\"用于表示一个视图层的数据\",{\"1\":{\"37\":1}}],[\"用于在不同的层之间传递数据\",{\"1\":{\"38\":1,\"40\":1}}],[\"那么这种方法比较合适\",{\"1\":{\"63\":1}}],[\"那么这些类之间应该如何做转换\",{\"1\":{\"44\":1}}],[\"那么三个类分成三个表\",{\"1\":{\"63\":1}}],[\"那么\",{\"1\":{\"63\":1}}],[\"那么接口使用方式如下\",{\"1\":{\"47\":1}}],[\"那么如何将blog转换为blogresp呢\",{\"1\":{\"47\":1}}],[\"发布博客的用户头像\",{\"1\":{\"47\":1}}],[\"发布博客的用户昵称\",{\"1\":{\"47\":1}}],[\"发布博客的用户id\",{\"1\":{\"47\":1}}],[\"博客响应类\",{\"1\":{\"47\":1}}],[\"博客响应\",{\"1\":{\"47\":1}}],[\"博客创建时间戳\",{\"1\":{\"47\":2}}],[\"博客内容\",{\"1\":{\"47\":2}}],[\"博客描述\",{\"1\":{\"47\":2}}],[\"博客标题\",{\"1\":{\"47\":2}}],[\"博客作者id\",{\"1\":{\"47\":1}}],[\"博客实体类\",{\"1\":{\"47\":2}}],[\"主键id\",{\"1\":{\"47\":2}}],[\"==\",{\"1\":{\"47\":3}}],[\"=\",{\"1\":{\"47\":33,\"51\":1,\"52\":1,\"53\":10,\"58\":1}}],[\"定义如下\",{\"1\":{\"47\":2}}],[\"found\",{\"1\":{\"70\":1}}],[\"from\",{\"1\":{\"51\":1,\"52\":1,\"53\":2,\"58\":1}}],[\"finditembyid\",{\"1\":{\"53\":1}}],[\"findroutelistbyid\",{\"1\":{\"52\":1}}],[\"findrouteitemsbyrouteid\",{\"1\":{\"51\":1,\"52\":1}}],[\"findlocationbyid\",{\"1\":{\"51\":1,\"52\":1}}],[\"final<\",{\"1\":{\"46\":2}}],[\"fast\",{\"1\":{\"45\":1}}],[\"5\",{\"1\":{\"46\":4}}],[\"5173\",{\"1\":{\"25\":1}}],[\"<case\",{\"1\":{\"53\":3}}],[\"<collection\",{\"1\":{\"52\":1}}],[\"<discriminator\",{\"1\":{\"53\":1}}],[\"<dependency>\",{\"1\":{\"46\":2}}],[\"<select\",{\"1\":{\"51\":1,\"52\":1,\"53\":1,\"58\":1}}],[\"<scope>provided<\",{\"1\":{\"46\":1}}],[\"<association\",{\"1\":{\"51\":1,\"52\":1}}],[\"<artifactid>mapstruct\",{\"1\":{\"46\":1}}],[\"<artifactid>mapstruct<\",{\"1\":{\"46\":1}}],[\"<result\",{\"1\":{\"51\":4,\"52\":2,\"53\":5,\"58\":6}}],[\"<resultmap\",{\"1\":{\"51\":2,\"52\":2,\"53\":2,\"58\":1}}],[\"<id\",{\"1\":{\"51\":2,\"52\":2,\"53\":1,\"58\":1}}],[\"<\",{\"1\":{\"46\":2,\"51\":5,\"52\":5,\"53\":7,\"58\":2}}],[\"<version>1\",{\"1\":{\"46\":2}}],[\"<groupid>org\",{\"1\":{\"46\":2}}],[\"类型安全且易于理解\",{\"1\":{\"45\":1}}],[\"因此速度快\",{\"1\":{\"45\":1}}],[\"因为我的网站取名还是太抽象了\",{\"1\":{\"14\":1}}],[\"因为全栈才符合牛马的气质啊\",{\"1\":{\"13\":1}}],[\"生成的映射代码使用普通的方法调用\",{\"1\":{\"45\":1}}],[\"大概意思是\",{\"1\":{\"45\":1}}],[\"大肠\",{\"1\":{\"14\":1}}],[\"大肠包小肠\",{\"1\":{\"14\":1}}],[\"b表和c表都存储a表的数据\",{\"1\":{\"63\":1}}],[\"b建立一张表\",{\"1\":{\"63\":1}}],[\"b\",{\"1\":{\"63\":2}}],[\"birthday\",{\"1\":{\"58\":2}}],[\"by\",{\"1\":{\"51\":1}}],[\"build\",{\"1\":{\"47\":1}}],[\"builder\",{\"1\":{\"47\":3}}],[\"blogconvertmapperimpl\",{\"1\":{\"47\":2}}],[\"blogconvertmapper\",{\"1\":{\"47\":8}}],[\"blogrespbuilder\",{\"1\":{\"47\":1}}],[\"blogresp\",{\"1\":{\"47\":17}}],[\"blog\",{\"1\":{\"47\":20}}],[\"based\",{\"1\":{\"45\":1}}],[\"bean类型之间进行映射的实现\",{\"1\":{\"45\":1}}],[\"bean\",{\"1\":{\"45\":1}}],[\"between\",{\"1\":{\"45\":1}}],[\"bo\",{\"1\":{\"42\":1}}],[\"boot\",{\"1\":{\"22\":2}}],[\"itemtype\",{\"1\":{\"53\":1}}],[\"item\",{\"1\":{\"53\":1}}],[\"itemresultmap\",{\"1\":{\"53\":3}}],[\"itemmapper\",{\"1\":{\"53\":2}}],[\"item表中存储了一个type字段\",{\"1\":{\"53\":1}}],[\"item`\",{\"1\":{\"51\":1,\"53\":15}}],[\"if\",{\"1\":{\"47\":2}}],[\"implements\",{\"1\":{\"47\":1}}],[\"implementation\",{\"1\":{\"45\":1}}],[\"id标签的property属性必须与java实体类的属性名一致\",{\"1\":{\"59\":1}}],[\"id来查询location对象\",{\"1\":{\"51\":1}}],[\"id`\",{\"1\":{\"51\":2,\"53\":2}}],[\"id=\",{\"1\":{\"51\":3,\"52\":3,\"53\":3,\"58\":2}}],[\"id\",{\"1\":{\"47\":3,\"51\":5,\"52\":7,\"53\":3,\"58\":4}}],[\"instance\",{\"1\":{\"47\":2}}],[\"install\",{\"1\":{\"25\":1}}],[\"interface\",{\"1\":{\"47\":1}}],[\"invocations\",{\"1\":{\"45\":1}}],[\"is\",{\"1\":{\"45\":2}}],[\"首先引用官网的原话\",{\"1\":{\"45\":1}}],[\"首先给出我参考的项目地址\",{\"1\":{\"3\":1}}],[\"下面介绍mapstruct\",{\"1\":{\"44\":1}}],[\"在开发过程中\",{\"1\":{\"57\":1}}],[\"在开发中我们会用到很多类\",{\"1\":{\"44\":1}}],[\"在字节码里面会加上\",{\"1\":{\"47\":1}}],[\"在application\",{\"1\":{\"22\":1}}],[\"前端相关的\",{\"1\":{\"66\":1}}],[\"前端\",{\"0\":{\"66\":1}}],[\"前端传后端的数据和后端传前端的数据\",{\"1\":{\"38\":1}}],[\"前言\",{\"0\":{\"57\":1}}],[\"前面说到\",{\"1\":{\"44\":1}}],[\"qo\",{\"1\":{\"42\":1}}],[\"概念pojo\",{\"1\":{\"42\":1}}],[\"他们之间可以相互转换\",{\"1\":{\"41\":1}}],[\"应当注意的是这些o之间并不是固定的\",{\"1\":{\"41\":1}}],[\"end\",{\"1\":{\"53\":2}}],[\"entity详解\",{\"1\":{\"42\":1}}],[\"entity\",{\"1\":{\"41\":1}}],[\"extends=\",{\"1\":{\"53\":1}}],[\"else\",{\"1\":{\"47\":1,\"53\":2}}],[\"easy\",{\"1\":{\"45\":1}}],[\"equals\",{\"1\":{\"36\":1}}],[\"route\",{\"1\":{\"52\":1}}],[\"routeresultmap\",{\"1\":{\"52\":2}}],[\"routelistmapper\",{\"1\":{\"52\":1}}],[\"routeid\",{\"1\":{\"51\":1}}],[\"routeitems\",{\"1\":{\"52\":1}}],[\"routeitem\",{\"1\":{\"51\":1,\"52\":1}}],[\"routeitemresultmap\",{\"1\":{\"51\":2,\"52\":1}}],[\"routeitemmapper\",{\"1\":{\"51\":1,\"52\":2}}],[\"recommend`\",{\"1\":{\"53\":1}}],[\"result标签的property属性必须与java实体类的属性名一致\",{\"1\":{\"59\":1}}],[\"resultmap的id属性必须与select语句的resultmap一致\",{\"1\":{\"59\":1}}],[\"resultmap=\",{\"1\":{\"51\":1,\"52\":1,\"53\":4,\"58\":1}}],[\"resultmap>\",{\"1\":{\"51\":2,\"52\":2,\"53\":2,\"58\":1}}],[\"resultmap写法如下\",{\"1\":{\"51\":1,\"52\":1,\"53\":1}}],[\"restaurantresultmap\",{\"1\":{\"53\":1}}],[\"restaurantmapper\",{\"1\":{\"53\":1}}],[\"restaurant\",{\"1\":{\"53\":4}}],[\"resp\",{\"1\":{\"41\":1}}],[\"return\",{\"1\":{\"47\":5}}],[\"req\",{\"1\":{\"41\":1}}],[\"run\",{\"1\":{\"25\":1}}],[\"还有一个blogresp的vo\",{\"1\":{\"47\":1}}],[\"还有些没列出来\",{\"1\":{\"41\":1}}],[\"还是不建议直接使用iconfont\",{\"1\":{\"7\":1}}],[\"个人写只用到vo\",{\"1\":{\"41\":1}}],[\"个人理解\",{\"0\":{\"41\":1}}],[\"个人留言\",{\"0\":{\"13\":1}}],[\"其中\",{\"1\":{\"47\":1}}],[\"其中每个字段都和数据库中的属性一一对应\",{\"1\":{\"40\":1}}],[\"其实加了componentmodel\",{\"1\":{\"47\":1}}],[\"其实都是根据业务场景来划分的\",{\"1\":{\"41\":1}}],[\"其实大概意思就是只有data\",{\"1\":{\"36\":1}}],[\"持久化对象\",{\"1\":{\"40\":1}}],[\"数据传输对象\",{\"1\":{\"40\":1}}],[\"数据库\",{\"1\":{\"19\":1},\"2\":{\"55\":1,\"61\":1,\"65\":1}}],[\"专门为前端服务的对象\",{\"1\":{\"40\":1}}],[\"显示层对象\",{\"1\":{\"40\":1}}],[\"和getter和setter\",{\"1\":{\"40\":1}}],[\"只有数据\",{\"1\":{\"40\":1}}],[\"只有一个人在写\",{\"1\":{\"31\":1}}],[\"普通java对象\",{\"1\":{\"40\":1}}],[\"它可以自动生成转换代码\",{\"1\":{\"48\":1}}],[\"它大大简化了基于约定优于配置的方法在java\",{\"1\":{\"45\":1}}],[\"它们之间的区别如下\",{\"1\":{\"40\":1}}],[\"它是一个持久化对象\",{\"1\":{\"39\":1}}],[\"它是一个数据传输对象\",{\"1\":{\"38\":1}}],[\"它是一个视图对象\",{\"1\":{\"37\":1}}],[\"它是一个简单的java对象\",{\"1\":{\"36\":1}}],[\"理解为po中的字段和数据库中的字段一一对应\",{\"1\":{\"39\":1}}],[\"理解为dto为各层传输的对象\",{\"1\":{\"38\":1}}],[\"过滤掉前端不需要的数据\",{\"1\":{\"37\":1,\"40\":1}}],[\"包含前端想要的数据\",{\"1\":{\"37\":1,\"40\":1}}],[\"或者耍流氓存向量或者json\",{\"1\":{\"64\":1}}],[\"或者用于作为业务逻辑层的参数和返回值\",{\"1\":{\"38\":1,\"39\":1}}],[\"或者用于表示一个数据库表中的一条记录\",{\"1\":{\"38\":1}}],[\"或者一个网页的显示数据\",{\"1\":{\"37\":1}}],[\"或者搜索框无法关闭\",{\"1\":{\"9\":1}}],[\"例如一个网页的表单数据\",{\"1\":{\"37\":1}}],[\"hotelresultmap\",{\"1\":{\"53\":1}}],[\"hotelmapper\",{\"1\":{\"53\":1}}],[\"hotel\",{\"1\":{\"53\":4}}],[\"hope官网介绍\",{\"1\":{\"7\":1}}],[\"hashcode这些方法\",{\"1\":{\"36\":1}}],[\"gmt+8\",{\"1\":{\"47\":2}}],[\"groupid>\",{\"1\":{\"46\":2}}],[\"greatly\",{\"1\":{\"45\":1}}],[\"gender\",{\"1\":{\"58\":2}}],[\"generated\",{\"1\":{\"45\":1}}],[\"generator\",{\"1\":{\"45\":1}}],[\"getuserbyid\",{\"1\":{\"58\":1}}],[\"getuserid\",{\"1\":{\"47\":1}}],[\"gettitle\",{\"1\":{\"47\":1}}],[\"getter\",{\"1\":{\"36\":1}}],[\"getid\",{\"1\":{\"47\":1}}],[\"getdescription\",{\"1\":{\"47\":1}}],[\"getcreateat\",{\"1\":{\"47\":1}}],[\"getcontent\",{\"1\":{\"47\":1}}],[\"getmapper\",{\"1\":{\"47\":1}}],[\"github\",{\"1\":{\"3\":1,\"4\":1}}],[\"order\",{\"1\":{\"51\":3,\"52\":2}}],[\"over\",{\"1\":{\"45\":1}}],[\"on\",{\"1\":{\"45\":1,\"53\":3}}],[\"of\",{\"1\":{\"45\":1}}],[\"object\",{\"1\":{\"40\":4}}],[\"object的缩写\",{\"1\":{\"36\":1,\"37\":1,\"38\":1,\"39\":1}}],[\"old\",{\"1\":{\"36\":1,\"40\":1}}],[\"后端相关的\",{\"1\":{\"33\":1}}],[\"后端\",{\"0\":{\"33\":1}}],[\"摸鱼\",{\"2\":{\"32\":1}}],[\"9个人\",{\"1\":{\"31\":1}}],[\"问就是摸鱼\",{\"1\":{\"31\":1}}],[\"别问\",{\"1\":{\"31\":1}}],[\"怎么玩\",{\"1\":{\"31\":2}}],[\"都是摸鱼大神\",{\"1\":{\"31\":1}}],[\"共同完成一个项目或任务\",{\"1\":{\"30\":1}}],[\"互相帮助\",{\"1\":{\"30\":1}}],[\"同学们可以互相学习\",{\"1\":{\"30\":1}}],[\"也能通过合作和交流来提高自己的技能和知识\",{\"1\":{\"30\":1}}],[\"也许\",{\"1\":{\"14\":1}}],[\"小组作业\",{\"2\":{\"32\":1}}],[\"小组作业的弊端\",{\"0\":{\"31\":1}}],[\"小组作业的初衷是为了让同学们在完成课程任务的同时\",{\"1\":{\"30\":1}}],[\"小组作业的初衷\",{\"0\":{\"30\":1}}],[\"小肠\",{\"1\":{\"14\":1}}],[\"神\",{\"0\":{\"29\":1}}],[\"论小组作业为什么是\",{\"0\":{\"29\":1}}],[\"杂谈\",{\"0\":{\"27\":1}}],[\"成功启动vue项目\",{\"1\":{\"25\":1}}],[\"打开浏览器访问http\",{\"1\":{\"25\":1}}],[\"这样减少开销\",{\"1\":{\"64\":1}}],[\"这样做查询时需要建立表的链接\",{\"1\":{\"63\":1}}],[\"这样做的好处是\",{\"1\":{\"63\":1}}],[\"这时\",{\"1\":{\"57\":1}}],[\"这时候会根据id来查询routeitem对象\",{\"1\":{\"52\":1}}],[\"这时候会根据loc\",{\"1\":{\"51\":1}}],[\"这时候我们可以通过<discriminator>标签来实现\",{\"1\":{\"53\":1}}],[\"这时候我们可以通过<collection>标签来实现\",{\"1\":{\"52\":1}}],[\"这时候我们可以通过<association>标签来实现\",{\"1\":{\"51\":1}}],[\"这里的spotresultmap继承了itemresultmap\",{\"1\":{\"53\":1}}],[\"这里指的是一个对象中包含多个对象\",{\"1\":{\"52\":1}}],[\"这里指的是一个对象中包含一个对象\",{\"1\":{\"51\":1}}],[\"这里是演示所以全选否\",{\"1\":{\"25\":1}}],[\"这两个属性需要从user表中获取\",{\"1\":{\"47\":1}}],[\"这么多个o\",{\"1\":{\"41\":1}}],[\"这个官网里面也有给出\",{\"1\":{\"8\":1}}],[\"这个jquery加载比较慢\",{\"1\":{\"6\":1}}],[\"这个实现在\",{\"1\":{\"6\":1}}],[\"value=\",{\"1\":{\"53\":3}}],[\"version>\",{\"1\":{\"46\":2}}],[\"view\",{\"1\":{\"40\":1}}],[\"vo也可以认为是一种dto\",{\"1\":{\"38\":1}}],[\"vo通常用于作为视图层的参数和返回值\",{\"1\":{\"37\":1}}],[\"vo通常用于表示一个视图层的数据\",{\"1\":{\"37\":1}}],[\"vo是view\",{\"1\":{\"37\":1}}],[\"vo\",{\"0\":{\"37\":1,\"40\":1},\"1\":{\"40\":2,\"42\":1}}],[\"vue\",{\"1\":{\"25\":1},\"2\":{\"69\":1}}],[\"vscode\",{\"0\":{\"19\":1,\"23\":1},\"1\":{\"20\":1,\"21\":1,\"24\":1},\"2\":{\"26\":1}}],[\"vscode一条龙服务\",{\"0\":{\"18\":1}}],[\"not\",{\"1\":{\"70\":1}}],[\"noargsconstructor\",{\"1\":{\"47\":2}}],[\"nickname\",{\"1\":{\"58\":2}}],[\"number`\",{\"1\":{\"53\":4}}],[\"number\",{\"1\":{\"53\":1}}],[\"null\",{\"1\":{\"47\":5,\"53\":2}}],[\"name\",{\"1\":{\"52\":2,\"53\":2}}],[\"name=com\",{\"1\":{\"22\":1}}],[\"name=demo\",{\"1\":{\"22\":1}}],[\"npm\",{\"1\":{\"25\":3}}],[\"创建博客时的时间戳\",{\"1\":{\"47\":2}}],[\"创建vue3项目\",{\"0\":{\"25\":1}}],[\"创建springboot项目\",{\"0\":{\"22\":1}}],[\"avatar\",{\"1\":{\"58\":2}}],[\"avg\",{\"1\":{\"53\":3}}],[\"avglevel\",{\"1\":{\"53\":1}}],[\"as\",{\"1\":{\"53\":7}}],[\"address\",{\"1\":{\"51\":2}}],[\"autowired\",{\"1\":{\"47\":2}}],[\"allargsconstructor\",{\"1\":{\"47\":2}}],[\"alt\",{\"1\":{\"24\":1}}],[\"artifactid>\",{\"1\":{\"46\":2}}],[\"and\",{\"1\":{\"45\":2}}],[\"approach\",{\"1\":{\"45\":1}}],[\"application\",{\"1\":{\"22\":1}}],[\"a\",{\"1\":{\"45\":2}}],[\"默认已经安装了node\",{\"1\":{\"23\":1}}],[\"默认已经安装了jdk\",{\"1\":{\"19\":1}}],[\"启动vue3项目\",{\"0\":{\"23\":1}}],[\"启动项目\",{\"1\":{\"22\":1}}],[\"启动springboot项目\",{\"0\":{\"19\":1}}],[\"点击run启动项目\",{\"1\":{\"22\":1}}],[\"discriminator>\",{\"1\":{\"53\":1}}],[\"desc\",{\"1\":{\"53\":1}}],[\"description\",{\"1\":{\"47\":19,\"53\":1}}],[\"defaultvalue\",{\"1\":{\"47\":2}}],[\"dependency>\",{\"1\":{\"46\":2}}],[\"dev\",{\"1\":{\"25\":1}}],[\"dao\",{\"1\":{\"42\":1}}],[\"data\",{\"1\":{\"40\":1,\"47\":2}}],[\"datasource\",{\"1\":{\"22\":4}}],[\"dto通常用于作为数据传输对象\",{\"1\":{\"38\":1}}],[\"dto通常用于表示一个业务实体\",{\"1\":{\"38\":1}}],[\"dto是data\",{\"1\":{\"38\":1}}],[\"dto\",{\"0\":{\"38\":1,\"40\":1},\"1\":{\"38\":1,\"39\":1,\"40\":2,\"41\":1,\"42\":1}}],[\"driver\",{\"1\":{\"22\":2}}],[\"understand\",{\"1\":{\"45\":1}}],[\"user\",{\"1\":{\"58\":2}}],[\"userresultmap\",{\"1\":{\"58\":2}}],[\"usernickname\",{\"1\":{\"47\":10}}],[\"username\",{\"1\":{\"47\":3}}],[\"username=root\",{\"1\":{\"22\":1}}],[\"useravatar\",{\"1\":{\"47\":13}}],[\"userid\",{\"1\":{\"47\":3}}],[\"uses\",{\"1\":{\"45\":1}}],[\"url=jdbc\",{\"1\":{\"22\":1}}],[\"target\",{\"1\":{\"47\":2}}],[\"timestamp\",{\"1\":{\"47\":2}}],[\"timezone=\",{\"1\":{\"47\":2}}],[\"title\",{\"1\":{\"47\":3}}],[\"toblogresp\",{\"1\":{\"47\":4}}],[\"to\",{\"1\":{\"45\":1}}],[\"tostring\",{\"1\":{\"36\":1}}],[\"type属性必须与java实体类的全限定名一致\",{\"1\":{\"59\":1}}],[\"type`\",{\"1\":{\"53\":1}}],[\"type=\",{\"1\":{\"51\":2,\"52\":2,\"53\":2,\"58\":1}}],[\"type\",{\"1\":{\"45\":1,\"53\":2}}],[\"types\",{\"1\":{\"45\":1}}],[\"thus\",{\"1\":{\"45\":1}}],[\"then\",{\"1\":{\"53\":6}}],[\"the\",{\"1\":{\"45\":2}}],[\"theme\",{\"1\":{\"7\":1}}],[\"that\",{\"1\":{\"45\":1}}],[\"transfer\",{\"1\":{\"38\":1,\"40\":1}}],[\"text\",{\"1\":{\"24\":1}}],[\"testdb1\",{\"1\":{\"22\":1}}],[\"3306\",{\"1\":{\"22\":1}}],[\"left\",{\"1\":{\"53\":3}}],[\"level`\",{\"1\":{\"53\":4}}],[\"level\",{\"1\":{\"53\":1}}],[\"latitude\",{\"1\":{\"51\":2}}],[\"latest\",{\"1\":{\"25\":1}}],[\"loc\",{\"1\":{\"51\":1,\"52\":1}}],[\"locationresultmap\",{\"1\":{\"51\":1}}],[\"locationmapper\",{\"1\":{\"51\":2,\"52\":1}}],[\"location\",{\"1\":{\"51\":2,\"52\":1}}],[\"localhost\",{\"1\":{\"22\":1,\"25\":1}}],[\"longitude\",{\"1\":{\"51\":2}}],[\"long\",{\"1\":{\"47\":4}}],[\"live2d的使用\",{\"0\":{\"8\":1}}],[\"根据你的情况选择\",{\"1\":{\"22\":2}}],[\"设置vue项目\",{\"1\":{\"25\":1}}],[\"设置项目\",{\"1\":{\"25\":1}}],[\"设置项目名称\",{\"1\":{\"22\":1}}],[\"设置java版本\",{\"1\":{\"22\":1}}],[\"设置域名\",{\"1\":{\"22\":1}}],[\"输入以下命令\",{\"1\":{\"25\":1}}],[\"输入\",{\"1\":{\"25\":1}}],[\"输入项目名称\",{\"1\":{\"22\":1}}],[\"输入域名\",{\"1\":{\"22\":1}}],[\"输入java\",{\"1\":{\"22\":1}}],[\"选择依赖\",{\"1\":{\"22\":1}}],[\"选择java版本\",{\"1\":{\"22\":1}}],[\"选择java为开发语言\",{\"1\":{\"22\":2}}],[\"选择jar为打包方式\",{\"1\":{\"22\":2}}],[\"选择maven\",{\"1\":{\"22\":2}}],[\"选择springboot版本\",{\"1\":{\"22\":2}}],[\"选择spring\",{\"1\":{\"22\":2}}],[\"c表存储自己独特的字段\",{\"1\":{\"63\":1}}],[\"c建立一张表\",{\"1\":{\"63\":1}}],[\"c继承a\",{\"1\":{\"63\":2}}],[\"case\",{\"1\":{\"53\":2}}],[\"column属性必须与数据库字段名一致\",{\"1\":{\"59\":2}}],[\"column=\",{\"1\":{\"51\":7,\"52\":6,\"53\":7,\"58\":7}}],[\"com\",{\"1\":{\"51\":1,\"52\":2,\"53\":4}}],[\"component\",{\"1\":{\"47\":2}}],[\"componentmodel\",{\"1\":{\"47\":2}}],[\"convertblogtoresp\",{\"1\":{\"47\":2}}],[\"convention\",{\"1\":{\"45\":1}}],[\"content\",{\"1\":{\"47\":3}}],[\"configuration\",{\"1\":{\"45\":1}}],[\"constructor\",{\"1\":{\"36\":1}}],[\"code\",{\"1\":{\"45\":2}}],[\"ctm\",{\"1\":{\"31\":1}}],[\"ctrl\",{\"1\":{\"22\":1}}],[\"cd\",{\"1\":{\"25\":1}}],[\"cj\",{\"1\":{\"22\":1}}],[\"class\",{\"1\":{\"22\":1,\"47\":4}}],[\"createat\",{\"1\":{\"47\":3}}],[\"create\",{\"1\":{\"22\":2,\"25\":1}}],[\"+\",{\"1\":{\"22\":2,\"25\":1}}],[\"按住ctrl\",{\"1\":{\"25\":1}}],[\"按住\",{\"1\":{\"22\":1}}],[\"按照vuepress\",{\"1\":{\"7\":1}}],[\"spotresultmap\",{\"1\":{\"53\":2}}],[\"spotmapper\",{\"1\":{\"53\":2}}],[\"spot\",{\"1\":{\"53\":4}}],[\"spring\",{\"1\":{\"22\":5,\"47\":4}}],[\"spring插件\",{\"1\":{\"21\":1}}],[\"star\",{\"1\":{\"53\":1}}],[\"starnumber\",{\"1\":{\"53\":1}}],[\"stu\",{\"1\":{\"51\":1,\"52\":2,\"53\":4}}],[\"string\",{\"1\":{\"47\":20,\"53\":1}}],[\"source\",{\"1\":{\"47\":2}}],[\"shape\",{\"1\":{\"47\":8}}],[\"shift\",{\"1\":{\"22\":1}}],[\"schema\",{\"1\":{\"47\":16}}],[\"scope>\",{\"1\":{\"46\":1}}],[\"safe\",{\"1\":{\"45\":1}}],[\"simplifies\",{\"1\":{\"45\":1}}],[\"select>\",{\"1\":{\"51\":1,\"52\":1,\"53\":1,\"58\":1}}],[\"select\",{\"1\":{\"51\":1,\"52\":1,\"53\":2,\"58\":1}}],[\"select=\",{\"1\":{\"51\":1,\"52\":2}}],[\"setter\",{\"1\":{\"36\":1}}],[\"search\",{\"1\":{\"9\":1}}],[\"安装vue插件\",{\"0\":{\"24\":1}}],[\"安装springboot插件\",{\"0\":{\"21\":1}}],[\"安装java插件\",{\"0\":{\"20\":1}}],[\"join\",{\"1\":{\"53\":3}}],[\"j打开命令行窗口\",{\"1\":{\"25\":1}}],[\"jdbc\",{\"1\":{\"22\":1}}],[\"javatype=\",{\"1\":{\"53\":1}}],[\"java类之间的转换\",{\"0\":{\"44\":1}}],[\"java的多个o\",{\"0\":{\"35\":1}}],[\"java\",{\"1\":{\"22\":3,\"36\":1,\"40\":1,\"45\":1},\"2\":{\"43\":1,\"49\":1}}],[\"java插件\",{\"1\":{\"20\":1}}],[\"jsonformat\",{\"1\":{\"47\":10}}],[\"js\",{\"1\":{\"6\":2,\"23\":1}}],[\"没有固定的规则\",{\"1\":{\"41\":1}}],[\"没有其他的方法\",{\"1\":{\"36\":1}}],[\"没有包含任何第三方库的依赖\",{\"1\":{\"36\":1}}],[\"没有包含任何网络通信\",{\"1\":{\"36\":1}}],[\"没有包含任何数据库操作\",{\"1\":{\"36\":1}}],[\"没有包含任何业务逻辑\",{\"1\":{\"36\":1}}],[\"没有使用任何注解\",{\"1\":{\"36\":1}}],[\"没有实现任何接口\",{\"1\":{\"36\":1}}],[\"没有继承任何类\",{\"1\":{\"36\":1}}],[\"没有配置数据库启动不了\",{\"1\":{\"22\":1}}],[\"没装的可以上网搜教程\",{\"1\":{\"19\":1,\"23\":1}}],[\"没办法太菜了bushi\",{\"1\":{\"3\":1}}],[\"mybatis字段类型不匹配解决\",{\"0\":{\"56\":1}}],[\"mybatis\",{\"2\":{\"55\":1,\"61\":1}}],[\"mybatis的复杂查询主要通过<resultmap>标签来实现\",{\"1\":{\"54\":1}}],[\"mybatis复杂sql查询\",{\"0\":{\"50\":1}}],[\"mysql\",{\"1\":{\"22\":2}}],[\"method\",{\"1\":{\"45\":1}}],[\"mapper注解用于标识这是一个mapstruct的映射接口\",{\"1\":{\"47\":1}}],[\"mappers\",{\"1\":{\"47\":1}}],[\"mapper\",{\"1\":{\"47\":1,\"51\":1,\"52\":2,\"53\":4}}],[\"mapping注解用于定义具体的映射规则\",{\"1\":{\"47\":1}}],[\"mapping\",{\"1\":{\"45\":1,\"47\":2}}],[\"mappings注解用于定义映射规则\",{\"1\":{\"47\":1}}],[\"mappings\",{\"1\":{\"45\":1,\"47\":1}}],[\"mapstruct<\",{\"1\":{\"46\":2}}],[\"mapstruct是一个用于java类之间的转换的工具\",{\"1\":{\"48\":1}}],[\"mapstruct是一个代码生成器\",{\"1\":{\"45\":1}}],[\"mapstruct是什么\",{\"0\":{\"45\":1}}],[\"mapstruct\",{\"1\":{\"45\":1},\"2\":{\"49\":1}}],[\"mapstruct的使用\",{\"0\":{\"44\":1}}],[\"maven坐标如下\",{\"1\":{\"46\":1}}],[\"maven引入\",{\"0\":{\"46\":1}}],[\"maven\",{\"1\":{\"19\":1}}],[\"mo7cc开源\",{\"1\":{\"11\":1}}],[\"mouseeffect\",{\"1\":{\"6\":1}}],[\"记录一些与编程相关的技巧与心得\",{\"1\":{\"16\":1}}],[\"技术\",{\"0\":{\"16\":1}}],[\"人还是要积极乐观的不是吗\",{\"1\":{\"14\":1}}],[\"人生无常\",{\"1\":{\"14\":1}}],[\"好吧\",{\"1\":{\"14\":1}}],[\"就是我的生活\",{\"1\":{\"14\":1}}],[\"莫劝他人善\",{\"1\":{\"14\":1}}],[\"未经他人苦\",{\"1\":{\"14\":1}}],[\"可以存成两张表\",{\"1\":{\"64\":1}}],[\"可以看出多了两个属性\",{\"1\":{\"47\":1}}],[\"可以理解为controller层返回的resp对象\",{\"1\":{\"37\":1}}],[\"可以刷新一下\",{\"1\":{\"6\":1}}],[\"可能看到我的网站的人觉得我是个衰鬼\",{\"1\":{\"14\":1}}],[\"所以大家可以根据自己的业务场景来划分\",{\"1\":{\"41\":1}}],[\"所以按照现在前后分离的思想来看\",{\"1\":{\"38\":1}}],[\"所以说我就是牛马本马\",{\"1\":{\"31\":1}}],[\"所以只能走全栈\",{\"1\":{\"13\":1}}],[\"所以我把音乐存在本地\",{\"1\":{\"10\":1}}],[\"全栈十分辛苦\",{\"1\":{\"13\":1}}],[\"开个玩笑\",{\"1\":{\"13\":1}}],[\"😎\",{\"1\":{\"13\":1,\"14\":1,\"31\":2}}],[\"什么\",{\"1\":{\"13\":1}}],[\"如你所见\",{\"1\":{\"13\":1}}],[\"如果没有componentmodel\",{\"1\":{\"47\":1}}],[\"如果搜索不到\",{\"1\":{\"9\":1}}],[\"如果你是大牛\",{\"1\":{\"7\":1}}],[\"如果鼠标点击没有特效\",{\"1\":{\"6\":1}}],[\"欢迎访问我的个人网站\",{\"1\":{\"13\":1}}],[\"你的目录\",{\"1\":{\"25\":1}}],[\"你问我为什么要走全栈\",{\"1\":{\"13\":1}}],[\"你好\",{\"1\":{\"13\":1}}],[\"你可以直接在iconfont建立自己的图标\",{\"1\":{\"7\":1}}],[\"感谢开源社区\",{\"1\":{\"11\":1}}],[\"感谢作者\",{\"1\":{\"11\":1}}],[\"感谢作者开源\",{\"1\":{\"3\":1}}],[\"感谢\",{\"0\":{\"11\":1}}],[\"有服务器的可以参照原作者的写法\",{\"1\":{\"10\":1}}],[\"由于没有服务器\",{\"1\":{\"10\":1}}],[\"音乐插件\",{\"0\":{\"10\":1}}],[\"请尝试刷新页面\",{\"1\":{\"9\":1}}],[\"具体请参阅关于本站\",{\"1\":{\"15\":1}}],[\"具体使用方法请参照官网\",{\"1\":{\"9\":1}}],[\"具体可以参照官网\",{\"1\":{\"8\":1}}],[\"pwd\",{\"1\":{\"58\":1}}],[\"phone\",{\"1\":{\"58\":2}}],[\"password\",{\"1\":{\"58\":1}}],[\"password=123456\",{\"1\":{\"22\":1}}],[\"param\",{\"1\":{\"47\":3}}],[\"price`\",{\"1\":{\"53\":4}}],[\"private\",{\"1\":{\"47\":15}}],[\"property=\",{\"1\":{\"51\":7,\"52\":6,\"53\":6,\"58\":7}}],[\"properties中设置数据库连接信息\",{\"1\":{\"22\":1}}],[\"processor<\",{\"1\":{\"46\":1}}],[\"project\",{\"1\":{\"22\":2}}],[\"pro插件\",{\"1\":{\"9\":1}}],[\"persistent\",{\"1\":{\"40\":1}}],[\"plain\",{\"1\":{\"40\":1,\"45\":1}}],[\"plugin\",{\"1\":{\"9\":1}}],[\"po都是java中常用的对象类型\",{\"1\":{\"40\":1}}],[\"po的区别\",{\"0\":{\"40\":1}}],[\"po通常用于作为数据传输对象\",{\"1\":{\"39\":1}}],[\"po通常用于表示一个数据库表中的一条记录\",{\"1\":{\"39\":1}}],[\"po是persistent\",{\"1\":{\"39\":1}}],[\"po\",{\"0\":{\"39\":1},\"1\":{\"40\":1,\"41\":1,\"42\":1}}],[\"pojo是plain\",{\"1\":{\"36\":1}}],[\"pojo\",{\"0\":{\"36\":1,\"40\":1},\"1\":{\"40\":2}}],[\"p\",{\"1\":{\"22\":1}}],[\"public\",{\"1\":{\"6\":1,\"47\":8}}],[\"搜索\",{\"0\":{\"9\":1}}],[\"另外附上资源网模型资源\",{\"1\":{\"8\":1}}],[\"图标使用方法请参考fontawesome官网\",{\"1\":{\"7\":1}}],[\"图标的使用\",{\"0\":{\"7\":1}}],[\"注意事项\",{\"0\":{\"59\":1}}],[\"注意\",{\"1\":{\"6\":1,\"9\":1,\"13\":1,\"14\":1}}],[\"我们有以下集中存储方式\",{\"1\":{\"64\":1}}],[\"我们一般有两种存储方式\",{\"1\":{\"63\":1}}],[\"我们可以将数据库字段类型与java实体类属性类型进行映射\",{\"1\":{\"60\":1}}],[\"我们需要在mybatis的xml文件设置resultmap\",{\"1\":{\"57\":1}}],[\"我们经常会遇到数据库字段类型与java实体类属性类型不匹配的问题\",{\"1\":{\"57\":1}}],[\"我们只需要定义一个接口\",{\"1\":{\"47\":1}}],[\"我的网站就是我的\",{\"1\":{\"14\":1}}],[\"我的目标是成为一名全栈工程师\",{\"1\":{\"13\":1}}],[\"我只是比较笨\",{\"1\":{\"13\":1}}],[\"我是一个正在努力前行的小牛马\",{\"1\":{\"13\":1}}],[\"我叫carmen\",{\"1\":{\"13\":1}}],[\"我这里父类和子类的表是分开的\",{\"1\":{\"53\":1}}],[\"我这里就不赘述了\",{\"1\":{\"8\":1}}],[\"我这个只是拙劣的模仿\",{\"1\":{\"4\":1}}],[\"我就不赘述了\",{\"1\":{\"6\":1}}],[\"网上特别多\",{\"1\":{\"6\":1}}],[\"文件中\",{\"1\":{\"6\":1}}],[\"鼠标点击特效\",{\"0\":{\"6\":1}}],[\"说明\",{\"0\":{\"5\":1}}],[\"本站搜索功能可能存在一些问题\",{\"1\":{\"9\":1}}],[\"本站使用vuepress\",{\"1\":{\"9\":1}}],[\"本站使用的是live2d插件\",{\"1\":{\"8\":1}}],[\"本站采用fontawesome图标\",{\"1\":{\"7\":1}}],[\"本站仓库地址\",{\"0\":{\"4\":1}}],[\"本站几乎全部参考这个项目\",{\"1\":{\"3\":1}}],[\"目录\",{\"2\":{\"1\":1,\"17\":1,\"28\":1,\"34\":1,\"67\":1}}],[\"相关信息\",{\"1\":{\"0\":1,\"16\":1,\"27\":1,\"33\":1,\"66\":1}}],[\"关于建站\",{\"0\":{\"15\":1}}],[\"关于本站\",{\"0\":{\"14\":1}}],[\"关于本站搭建\",{\"0\":{\"2\":1}}],[\"关于我\",{\"0\":{\"12\":1}}],[\"关于我和关于本站\",{\"1\":{\"0\":1}}],[\"关于\",{\"0\":{\"0\":1}}]],\"version\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
